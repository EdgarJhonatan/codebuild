version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "‚ñ∂ Instalando dependencias..."
      - npm install -g serverless@3.38.0
      - npm install

      - echo "‚ñ∂ Inicializando repositorio Git temporal..."
      - git init
      - git config user.email "codebuild@example.com"
      - git config user.name "AWS CodeBuild"
      - git add .
      - git commit -m "scan commit" || true

      - echo "‚ñ∂ Instalando git-secrets..."
      - git clone https://github.com/awslabs/git-secrets.git
      - cd git-secrets && make install && cd ..

      - echo "‚ñ∂ Configurando git-secrets..."
      - git secrets --install
      - git secrets --register-aws

      - echo "‚ñ∂ Instalando Trivy..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
      - cp ./bin/trivy /usr/local/bin/

  build:
    commands:
      - echo "‚ñ∂ Ejecutando an√°lisis de secretos con git-secrets..."
      - git secrets --scan $(find . -type f -name '*.js') || { echo '‚ùå Se detectaron secretos embebidos.'; exit 1; }

      - echo "‚ñ∂ Ejecutando escaneo de vulnerabilidades con Trivy (modo directorio)..."
      - trivy fs --exit-code 1 --severity HIGH,CRITICAL . || { echo '‚ùå Vulnerabilidades cr√≠ticas encontradas.'; exit 1; }

      # -------------------- SONARQUBE (pendiente de activar) --------------------
      # - echo "‚ñ∂ Ejecutando an√°lisis de calidad con SonarQube..."
      # - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      # - unzip sonar-scanner.zip
      # - export PATH=$PATH:$PWD/sonar-scanner-5.0.1.3006-linux/bin
      # - sonar-scanner
      # üîí Requiere archivo 'sonar-project.properties' y variable $SONAR_TOKEN
      # ----------------------------------------------------------------------------

  post_build:
    commands:
      - echo "‚úÖ Validaciones finalizadas. Listo para revisi√≥n del PR."
