version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "‚ñ∂ Instalando herramientas comunes..."
      - npm install
      - git init
      - git add .
      - git commit -m "scan commit" || true

      - echo "‚ñ∂ Instalando git-secrets..."
      - git clone https://github.com/awslabs/git-secrets.git
      - cd git-secrets && make install && cd ..
      - git secrets --install
      - git secrets --register-aws

      - echo "‚ñ∂ Instalando Trivy..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
      - mv trivy /usr/local/bin/
      - trivy --version

  build:
    commands:
      - echo "‚ñ∂ Detectando tipo de proyecto..."
      - |
        if [ -f "main.tf" ]; then
          echo "üîç Proyecto Terraform detectado"
          echo "‚ñ∂ Ejecutando Trivy IaC scan..."
          trivy config . --exit-code 1 --severity HIGH,CRITICAL
        elif [ -f "Dockerfile" ]; then
          echo "üê≥ Proyecto Docker detectado"
          echo "‚ñ∂ Ejecutando Trivy scan de imagen (requiere build de imagen)..."
          # Docker no est√° habilitado por defecto en CodeBuild. Dejar comentado:
          # docker build -t myimage .
          # trivy image --exit-code 1 --severity HIGH,CRITICAL myimage
          echo "‚ñ∂ Escaneo de imagen comentado (requiere Docker enabled en CodeBuild)"
        elif [ -f "serverless.yml" ]; then
          echo "‚ö° Proyecto Serverless (Lambda) detectado"
          echo "‚ñ∂ Ejecutando an√°lisis git-secrets..."
          git secrets --scan $(find . -type f -name '*.js') || {
            echo '‚ùå Se detectaron secretos embebidos.'; exit 1;
          }
          echo "‚ñ∂ Ejecutando Trivy para dependencias..."
          trivy fs . --exit-code 1 --severity HIGH,CRITICAL
        else
          echo "‚ùå Tipo de proyecto no reconocido. Abortando..."
          exit 1
        fi
